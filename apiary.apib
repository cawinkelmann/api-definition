FORMAT: 1A

# Church Community Builder API


## Groups

+ Parameters
    + id: `1` (number) - ID of the group


### Group members list [GET /groups/{id}/members]

+ Response 200 (application/json)
    + Attributes (array)
        + (BasicIndividualGroupsProfileWithIndividual)
            + group_id: 5
            + individual_id: 1
            + status: MEMBER
            + individual (BasicIndividualProfile)
                + id: 1 (number)
                + name: Joe Tester
                + first_name: Joe
                + last_name: Tester
                + phone (Phone)
                    + mobile: +17195553939
                    + home: +17195553938
                + images (array)
                    + (Image)
                        + thumbnail: http://s3.amazon.com/thumbnail1.jpg
                        + small: http://s3.amazon.com/small1.jpg
                        + medium: http://s3.amazon.com/medium1.jpg
                        + large: http://s3.amazon.com/large1.jpg
            + messages (array[string])
            + actions (object)
                + canRemoveMember (Action)
                    + allowed: true (boolean)
                    + reasons (array[string])
                + canChangeToMember (Action)
                    + allowed: true (boolean)
                    + reasons (array[string])
        + (BasicIndividualGroupsProfileWithIndividual)
            + group_id: 5 (number)
            + individual_id: 2 (number)
            + status: MEMBER (string)
            + individual (BasicIndividualProfile)
                + id: 2 (number)
                + name: Jane Tester
                + first_name: Jane
                + last_name: Tester
                + phone (Phone)
                    + mobile: +17195553939
                    + home: +17195553938
                + images (array)
                    + (Image)
                        + thumbnail: http://s3.amazon.com/thumbnail2.jpg
                        + small: http://s3.amazon.com/small2.jpg
                        + medium: http://s3.amazon.com/medium2.jpg
                        + large: http://s3.amazon.com/large2.jpg
            + messages (array[string])
            + actions (object)
                + canRemoveMember (Action)
                    + allowed: true (boolean)
                    + reasons (array[string])
                + canChangeToMember (Action)
                    + allowed: true (boolean)
                    + reasons (array[string])
        + (BasicIndividualGroupsProfileWithIndividual)
            + group_id: 5 (number)
            + individual_id: 3 (number)
            + status: LEADER (string)
            + individual (BasicIndividualProfile)
                + id: 3 (number)
                + name: John Tester
                + first_name: John
                + last_name: Tester
                + phone (Phone)
                    + mobile: +17195553939
                    + home: +17195553938
                + images (array)
                    + (Image)
                        + thumbnail: http://s3.amazon.com/thumbnail3.jpg
                        + small: http://s3.amazon.com/small3.jpg
                        + medium: http://s3.amazon.com/medium3.jpg
                        + large: http://s3.amazon.com/large3.jpg
            + messages (array[string])
            + actions (object)
                + canRemoveMember (Action)
                    + allowed: false (boolean)
                    + reasons (array[string])
                        + MAIN_GROUP_LEADER
                + canChangeToMember (Action)
                    + allowed: false (boolean)
                    + reasons (array[string])
                        + MAIN_GROUP_LEADER

### Add group members [POST /groups/{id}/members/{action}]

+ Parameters
    + id: `1` (number) - ID of the group
    + action: `add` (string) - The action to perform
        - Members
            + `add`
            + `invite`

+ Request (application/json)

    + Attributes
        + ids: 1,2,3 (array[number]) - The individual ids to add/invite
        + message (string,optional) - The optional invite message to include

+ Response 200 (application/json)
    + Attributes (array)
        + (BasicIndividualGroupsProfileWithIndividual)
            + group_id: 5 (number)
            + individual_id: 1 (number)
            + status: MEMBER (string)
            + individual (BasicIndividualProfile)
                + id: 1 (number)
                + name: Joe Tester
                + first_name: Joe
                + last_name: Tester
                + phone (Phone)
                    + mobile: +17195553939
                    + home: +17195553938
                + images (array)
                    + (Image)
                        + thumbnail: http://s3.amazon.com/thumbnail1.jpg
                        + small: http://s3.amazon.com/small1.jpg
                        + medium: http://s3.amazon.com/medium1.jpg
                        + large: http://s3.amazon.com/large1.jpg
        + (BasicIndividualGroupsProfileWithIndividual)
            + group_id: 5 (number)
            + individual_id: 2 (number)
            + status: MEMBER (string)
            + individual (BasicIndividualProfile)
                + id: 2 (number)
                + name: Jane Tester
                + first_name: Jane
                + last_name: Tester
                + phone (Phone)
                    + mobile: +17195553939
                    + home: +17195553938
                + images (array)
                    + (Image)
                        + thumbnail: http://s3.amazon.com/thumbnail2.jpg
                        + small: http://s3.amazon.com/small2.jpg
                        + medium: http://s3.amazon.com/medium2.jpg
                        + large: http://s3.amazon.com/large2.jpg
        + (BasicIndividualGroupsProfileWithIndividual)
            + group_id: 5 (number)
            + individual_id: 3 (number)
            + status: MEMBER (string)
            + individual (BasicIndividualProfile)
                + id: 3 (number)
                + name: John Tester
                + first_name: John
                + last_name: Tester
                + phone (Phone)
                    + mobile: +17195553939
                    + home: +17195553938
                + images (array)
                    + (Image)
                        + thumbnail: http://s3.amazon.com/thumbnail3.jpg
                        + small: http://s3.amazon.com/small3.jpg
                        + medium: http://s3.amazon.com/medium3.jpg
                        + large: http://s3.amazon.com/large3.jpg

### Remove group members [DELETE /groups/{id}/members]

+ Request (application/json)

    + Attributes
        + ids: 1,2,3 (array[number]) - The individual ids to remove

+ Response 200 (application/json)
    + Attributes (array)
        + (BasicIndividualGroupsProfile)
            + group_id: 5 (number)
            + individual_id: 1 (number)
            + status: REMOVED (string)
            + messages (array)
        + (BasicIndividualGroupsProfile)
            + group_id: 5 (number)
            + individual_id: 2 (number)
            + status: REMOVED (string)
            + messages (array)
        + (BasicIndividualGroupsProfileWithAction)
            + group_id: 5 (number)
            + individual_id: 3 (number)
            + status: LEADER (string)
            + messages (array)
            + actions (object)
                + canRemoveMember (Action)
                    + allowed: false (boolean)
                    + reasons (array[string])
                        + MAIN_GROUP_LEADER

### Update group members' status [PUT /groups/{id}/members]

+ Request (application/json)

    + Attributes
        + ids: 1,2,3 (array[number]) - The individual ids to update.
            __Note:__ The individual ids must already be in the group.
        + status: `MEMBER` (enum) - The status to update the individual's membership
            - Members
                + `MEMBER`
                + `LEADER`

+ Response 200 (application/json)
    + Attributes (array)
        + (BasicIndividualGroupsProfile)
            + group_id: 5 (number)
            + individual_id: 1 (number)
            + status: MEMBER (string)
            + messages (array)
        + (BasicIndividualGroupsProfile)
            + group_id: 5 (number)
            + individual_id: 2 (number)
            + status: MEMBER (string)
            + messages (array)
        + (BasicIndividualGroupsProfileWithAction)
            + group_id: 5 (number)
            + individual_id: 3 (number)
            + status: LEADER (string)
            + actions (object)
                + canChangeToMember (Action)
                    + allowed: false (boolean)
                    + reasons (array[string])
                        + MAIN_GROUP_LEADER
            + messages (array)
                + (Message)
                    + type: ERROR
                    + message: `Cannot change main group leader's status to member`

## Families

### Add new family [POST /families]

+ Request (application/json)
    + Attributes (FamilyProfileRequest)

+ Response 200 (application/json)
    + Attributes (FamilyProfile)


### Add or change family photo [POST /families/{id}/photo]
+ Parameters
    + id: 1 (number) - ID of the family

+ Request (application/json)
    + Attributes
        + photo (string)

+ Response 200 (application/json)
    + Attributes (BasicFamilyProfile)

## Individuals

### Create individual [POST /individuals]

+ Request (application/json)
    + Attributes (IndividualProfileRequest)

+ Response 200 (application/json)
    + Attributes (IndividualProfile)


### Edit individual [PUT /individuals/{:id}]
+ Request (application/json)
    + Attributes (IndividualProfileRequest)

+ Response 200 (application/json)
    + Attributes (IndividualProfile)


### Add or change individual photo [POST /individuals/{id}/photo]

+ Parameters
    + id: 1 (number) - ID of the individual

+ Request (application/json)
    + Attributes
        + photo (string)

+ Response 200 (application/json)
    + Attributes (IndividualProfile)


## Data Structures

### Phone
+ mobile: +18888888888 (string)
+ mobile_provider (object)
    + id: 5 (number)
    + name: Verizon (string)
+ home: +18888888888 (string)
+ work: +18888888888 (string)

### PhoneRequest
+ mobile: +18888888888 (string)
+ mobile_provider_id: 5 (number)
+ home: +18888888888 (string)
+ work: +18888888888 (string)

### Image
+ thumbnail: http://s3.amazon.com/thumbnail1.jpg (string)
+ small: http://s3.amazon.com/small1.jpg (string)
+ medium: http://s3.amazon.com/medium1.jpg (string)
+ large: http://s3.amazon.com/large1.jpg (string)

### Message
+ type: SUCCESS, WARNING, ERROR, INFO (enum)
+ message: `Successfully Saved` (string)

### Action
+ allowed: true (boolean)
+ reasons (array[string])

### BasicIndividualProfile
+ id: 1 (number)
+ name: First Last (string) - The individual's name
+ first_name: First (string) - The individual's first name
+ last_name: Last (string) - The individual's last name
+ phone (Phone)
+ images (array[Image])

### IndividualProfile (BasicIndividualProfile)
+ listed: true (boolean)

### BasicGroupProfile
+ id (number)
+ name (string)
+ description (string)
+ images (array[Image])

### BasicIndividualGroupsProfile
+ individual_id: 1 (number)
+ group_id: 5 (number)
+ status: REMOVED, MEMBER, LEADER (enum)
+ messages (array[Message])

### BasicIndividualGroupsProfileWithAction (BasicIndividualGroupsProfile)
+ actions (object)
    + canPerformAction (Action)

### BasicIndividualGroupsProfileWithIndividual (BasicIndividualGroupsProfileWithAction)
+ individual (BasicIndividualProfile)

### BasicIndividualGroupsProfileWithGroup (BasicIndividualGroupsProfileWithAction)
+ group (BasicGroupProfile)

### IndividualGroupsProfile (BasicIndividualGroupsProfileWithAction)
+ group (BasicGroupProfile, optional)
+ individual (BasicIndividualProfile, optional)

### IndividualProfileRequest
+ first_name (string)
+ last_name (string)
+ family_position: PRIMARY_CONTACT, SPOUSE, CHILD, OTHER (enum)
+ marital_status: NONE, SINGLE, MARRIED, WIDOWED (enum)
+ gender: NOT_SPECIFIED, MALE, FEMALE (enum)
+ birthday (string) - iso8601 without time
+ email (string)
+ phone (PhoneRequest)
+ allergies (string)
+ confirmed_no_allergies (boolean)
+ barcode

### Address
+ street (string)
+ city (string)
+ state (string)
+ zip (string)

### BasicFamilyProfile
+ id (number)
+ last_name (string)
+ address (Address)
+ message (string)
+ images (Image)

### FamilyProfile (BasicFamilyProfile)
+ members (array[IndividualProfile])

### FamilyProfileRequest
+ last_name (string)
+ address (object)
    + street (string)
    + city (string)
    + state (string)
    + zip (string)
+ message (string)
+ members (array)
    + (IndividualProfile)
        + first_name (string)
        + last_name (string)
        + family_position: PRIMARY_CONTACT, SPOUSE, CHILD, OTHER (enum)
        + marital_status: NONE, SINGLE, MARRIED, WIDOWED (enum)
        + gender: NOT_SPECIFIED, MALE, FEMALE (enum)
        + birthday
        + email (string)
        + phone (Phone)
        + allergies (string)
        + confirmed_no_allergies (boolean)
        + barcode (string)
